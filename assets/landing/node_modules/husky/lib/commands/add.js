"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.add = void 0;
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
const hooksDir = '.husky';
function getHookFile(cwd, hookName) {
    return path_1.default.join(cwd, hooksDir, hookName);
}
function makeHookExecutable(cwd, hookName) {
    const hookFile = getHookFile(cwd, hookName);
    fs_1.default.chmodSync(hookFile, 0o0755);
}
function createHookFile(cwd, hookName, cmd) {
    const filename = getHookFile(cwd, hookName);
    if (fs_1.default.existsSync(filename)) {
        throw new Error(`${hookName} already exists`);
    }
    const data = [
        '#!/bin/sh',
        '. "$(dirname $0)/_/husky.sh"',
        '',
        cmd,
    ].join('\n');
    fs_1.default.writeFileSync(filename, data, 'utf-8');
    console.log(path_1.default.relative(cwd, filename));
}
function add({ cwd, hookName, cmd, }) {
    createHookFile(cwd, hookName, cmd);
    makeHookExecutable(cwd, hookName);
}
exports.add = add;
