#!/usr/bin/env node
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const add_1 = require("./commands/add");
const install_1 = require("./commands/install");
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
function readPkg() {
    return JSON.parse(fs_1.default.readFileSync(path_1.default.join(__dirname, '../package.json'), 'utf-8'));
}
const pkg = readPkg();
const [, , arg, ...params] = process.argv;
function version() {
    console.log(pkg.version);
}
function help() {
    console.log(`Usage
  husky install [path from git root to package.json]
  husky add <hookname> [cmd]

Examples
  husky add pre-commit
  husky add pre-commit "npm test"
`);
}
if (arg === 'add') {
    add_1.add({
        cwd: process.cwd(),
        hookName: params[0],
        cmd: params[1],
    });
}
else if (arg === 'install') {
    install_1.install({
        cwd: process.cwd(),
        dir: params[0],
    });
}
else if (['--version', '-v'].includes(arg)) {
    version();
}
else {
    help();
}
